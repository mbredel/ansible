---

#
# Installes the Jenkins CLI, uses the CLI to install and update the plugins
#

- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  file: path={{ jenkins_dest }} state=directory

- name: Get Jenkins CLI
  get_url: url=http://localhost:{{ jenkins.port }}/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_dest }} mode=0440
  register: jenkins_local_cli
  until: "'OK' in jenkins_local_cli.msg or 'file already exists' in jenkins_local_cli.msg"
  retries: 5
  delay: 10

- name: Get Jenkins updates with proxy
  when: proxy
  get_url: url=https://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440 timeout=30 use_proxy={{ proxy }}
  environment: proxy_env
  register: jenkins_updates

- name: Get Jenkins updates without proxy
  when: not proxy
  get_url: url=https://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440 timeout=30 use_proxy={{ proxy }}
  register: jenkins_updates

- name: Update-center Jenkins
  when: jenkins_updates.changed
  shell: "cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:{{ jenkins.port }}/updateCenter/byId/default/postBack"

- name: Restart Jenkins
  when: jenkins_updates.changed
  service: name=jenkins state=restarted sleep=2 enabled=yes

- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  when: jenkins_updates.changed
  wait_for: host=localhost port={{ jenkins.port }} delay={{ startup_delay_s | default(10) }}

- name: List plugins
  when: plugins is defined
  shell: java -jar {{ jenkins.cli_dest }} -s http://localhost:{{ jenkins.port }} list-plugins | cut -f 1 -d ' '
  register: plugins_installed

- name: Install/update plugins
  when: plugins_installed.changed and plugins_installed.stdout.find('{{ item }}') == -1
  shell: java -jar {{ jenkins.cli_dest }} -s http://localhost:{{ jenkins.port }} install-plugin {{ item }}
  with_items: plugins

- name: Restart Jenkins
  when: plugins_installed.changed and plugins_installed.stdout.find('{{ item }}') == -1
  service: name=jenkins state=restarted sleep=2 enabled=yes
  with_items: plugins

- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  when: plugins_installed.changed and plugins_installed.stdout.find('{{ item }}') == -1
  wait_for: host=localhost port={{ jenkins.port }} delay={{ startup_delay_s | default(10) }}
  with_items: plugins

- name: List plugins to be updated
  shell: java -jar {{ jenkins.cli_dest }} -s http://localhost:{{ jenkins.port }} list-plugins | grep ')$' | cut -f 1 -d ' ' | sed ':a;N;$!ba;s/\n/ /g'
  register: plugins_updates

- name: Update plugins
  when: plugins_updates.stdout != ''
  shell: java -jar {{ jenkins.cli_dest }} -s http://localhost:{{ jenkins.port }} install-plugin {{ item }}
  with_items: plugins_updates.stdout.split()
  ignore_errors: yes

- name: Restart Jenkins
  when: plugins_updates.stdout != ''
  service: name=jenkins state=restarted sleep=2 enabled=yes

- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  when: plugins_updates.stdout != ''
  wait_for: host=localhost port={{ jenkins.port }} delay={{ startup_delay_s | default(10) }}
